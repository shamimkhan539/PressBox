name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]
    release:
        types: [published]

jobs:
    test:
        name: Test & Lint
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                node-version: [18, 20]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run linting
              run: npm run lint

            - name: Run type checking
              run: npm run type-check

            - name: Run tests
              run: npm test

            - name: Build application
              run: npm run build

    security:
        name: Security Audit
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run security audit
              run: npm audit --audit-level=high

            - name: Run CodeQL Analysis
              uses: github/codeql-action/init@v2
              with:
                  languages: javascript, typescript

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v2

    build:
        name: Build for Release
        needs: [test, security]
        runs-on: ${{ matrix.os }}
        if: github.event_name == 'release'
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      platform: linux
                    - os: windows-latest
                      platform: win32
                    - os: macos-latest
                      platform: darwin

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build application
              run: npm run build

            - name: Package application
              run: npm run package:${{ matrix.platform }}

            - name: Create distributables
              run: npm run make

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: pressbox-${{ matrix.platform }}
                  path: out/make/**/*

    release:
        name: Create Release
        needs: [build]
        runs-on: ubuntu-latest
        if: github.event_name == 'release'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download all artifacts
              uses: actions/download-artifact@v4

            - name: Upload release assets
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      pressbox-linux/**/*
                      pressbox-win32/**/*
                      pressbox-darwin/**/*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
