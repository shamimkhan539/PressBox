const fs = require("fs");
const path = require("path");

const sitePath = "C:\\Users\\BJIT\\PressBox\\sites\\bjit";
const wpConfigPath = path.join(sitePath, "wp-config.php");

console.log("🔧 Fixing wp-config.php for SQLite...\n");

// Read the current wp-config.php
let config = fs.readFileSync(wpConfigPath, "utf8");

// Create new wp-config.php optimized for SQLite
const newConfig = `<?php
/**
 * The base configuration for WordPress
 *
 * This file contains the following configurations:
 * * Database settings (SQLite)
 * * Secret keys
 * * Database table prefix
 * * ABSPATH
 *
 * This has been generated by PressBox
 */

// ** SQLite Database Configuration ** //
// This must be defined BEFORE requiring wp-settings.php
define( 'DB_FILE', 'database' );
define( 'DB_DIR', dirname( __FILE__ ) . '/wp-content/database/' );

// These are required but not used by SQLite
define( 'DB_NAME', 'bjit' );
define( 'DB_USER', '' );
define( 'DB_PASSWORD', '' );
define( 'DB_HOST', '' );
define( 'DB_CHARSET', 'utf8' );
define( 'DB_COLLATE', '' );

/**#@+
 * Authentication unique keys and salts.
 * Change these to different unique phrases!
 * You can generate these using: https://api.wordpress.org/secret-key/1.1/salt/
 */
define( 'AUTH_KEY',         'put your unique phrase here' );
define( 'SECURE_AUTH_KEY',  'put your unique phrase here' );
define( 'LOGGED_IN_KEY',    'put your unique phrase here' );
define( 'NONCE_KEY',        'put your unique phrase here' );
define( 'AUTH_SALT',        'put your unique phrase here' );
define( 'SECURE_AUTH_SALT', 'put your unique phrase here' );
define( 'LOGGED_IN_SALT',   'put your unique phrase here' );
define( 'NONCE_SALT',       'put your unique phrase here' );

/**#@-*/

/**
 * WordPress database table prefix.
 */
$table_prefix = 'wp_';

/**
 * WordPress debugging mode.
 */
define( 'WP_DEBUG', true );
define( 'WP_DEBUG_LOG', true );
define( 'WP_DEBUG_DISPLAY', false );

/**
 * WordPress site URLs
 */
define( 'WP_HOME', 'http://localhost:8000' );
define( 'WP_SITEURL', 'http://localhost:8000' );

/* Add any custom values between this line and the "stop editing" line. */

/* That's all, stop editing! Happy publishing. */

/** Absolute path to the WordPress directory. */
if ( ! defined( 'ABSPATH' ) ) {
    define( 'ABSPATH', __DIR__ . '/' );
}

/** Sets up WordPress vars and included files. */
require_once ABSPATH . 'wp-settings.php';
`;

// Write the new config
fs.writeFileSync(wpConfigPath, newConfig);
console.log("✅ wp-config.php updated for SQLite");

// Ensure database directory exists
const dbDir = path.join(sitePath, "wp-content", "database");
if (!fs.existsSync(dbDir)) {
    fs.mkdirSync(dbDir, { recursive: true });
    console.log("✅ Created database directory");
}

// Create .htaccess to protect database directory
const htaccessPath = path.join(dbDir, ".htaccess");
fs.writeFileSync(htaccessPath, "Deny from all");
console.log("✅ Created .htaccess for database protection");

// Check if db.php exists
const dbPhpPath = path.join(sitePath, "wp-content", "db.php");
if (fs.existsSync(dbPhpPath)) {
    console.log("✅ db.php drop-in exists");
} else {
    console.log("⚠️  db.php drop-in is missing!");
}

// Check if plugin exists
const pluginPath = path.join(
    sitePath,
    "wp-content",
    "plugins",
    "sqlite-database-integration"
);
if (fs.existsSync(pluginPath)) {
    console.log("✅ SQLite Integration plugin is installed");
} else {
    console.log("⚠️  SQLite Integration plugin is missing!");
}

console.log("\n🎉 Configuration updated!");
console.log("📋 Next steps:");
console.log("   1. Restart the site in PressBox");
console.log("   2. Open http://localhost:8000");
console.log("   3. You should see the WordPress installation wizard");
